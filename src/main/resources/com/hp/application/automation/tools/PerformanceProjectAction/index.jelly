<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson" xmlns:f="/lib/form">
    <l:layout title="Jenkins JS Lib Samples" norefresh="true">
        <l:side-panel>
            <st:include it="${it.currentProject}" page="sidepanel.jelly"/>
        </l:side-panel>


        <l:main-panel>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.1.1/Chart.min.js"></script>
            <j:set var="builds" value="${it.builds}"/>

            <st:bind var="instance" value="${it}"/>
            <st:bind var="projectName" value="${it.DisplayName}"/>
            <st:bind var="" value="${it.UpdatedData}"/>

        <h1>${it.DisplayName}</h1>

        <div id="container">
            <!-- This element's contents will be replaced with your component. -->
        </div>
            <h4> Total throughput </h4>
            <canvas id="TotalThroughput" width="900" height="500"/>
            <h4> AvgHitsPerSecGraphData </h4>
            <canvas id="AvgHitsPerSecGraphData" width="900" height="500"/>
            <h4> AvgThroughput</h4>
            <canvas id="AvgThroughput" width="900" height="500"/>
            <h4> Total Hits</h4>
            <canvas id="TotalHits" width="900" height="500"/>
            <h4> Average transaction</h4>
            <canvas id="AvgTRT" width="900" height="500"/>
            <div id="AvgTRT_Legend"/>
            <h4>Error per sec</h4>
            <canvas id="ErrorPerSec" width="900" height="500"/>
            <h4>PercentileTransactionWholeRun</h4>
            <canvas id="PercentileTransactionWholeRun" width="900" height="500"/>
            <div id="PercentileTransactionWholeRun_Legend"/>
        <!--<st:bind var="f" value="${it.BuildPerformanceReportList}"/>-->
        <!--<st:bind var="totalHitsGraph2" value="${it.getTotalHitsGraphData}"/>-->
        <!--<st:bind var="thdgd" value="${it.getAvgThroughtputResultsGraphData}"/>-->


            <div id="msk" />

        <div id="mse" />

        <div id="msg" />

        <div id="msv" />

        <div id="msr"></div>

        <pre><code>
        </code></pre>
        <div id="examples"></div>
        <script>

            // var canvas = document.createElement('canvas');
            //
            // canvas.id = "CursorLayer";
            // canvas.width = 900;
            // canvas.height = 500;
            //
            // var body1 = document.getElementById('msr');
            // body1.appendChild(canvas);
            //
            // cursorLayer = document.getElementById("CursorLayer");
            //
            // console.log(cursorLayer);



            // var adf = JSON.parse(thgd);
            // document.getElementById('msv').innerHTML = JSON.stringify(totalHitsGraphData);
            // var ExampleApplication = React.createClass({
            // render: function() {
            // var elapsed = Math.round(this.props.elapsed  / 100);
            // var seconds = elapsed / 10 + (elapsed % 10 ? '' : '.0' );
            // var message =
            // 'React has been successfully running for ' + seconds + ' seconds.';
            //
            // return React.DOM.p(null, message);
            // }
            // });

            // Call React.createFactory instead of directly call ExampleApplication({...}) in React.render
            // var ExampleApplicationFactory = React.createFactory(ExampleApplication);
            //
            // var start = new Date().getTime();
            // setInterval(function() {
            // ReactDOM.render(
            //     ExampleApplicationFactory({elapsed: new Date().getTime() - start}),
            //     document.getElementById('container')); }, 50);
            // <!--var f =<st:bind value="${BuildPerformanceReport}"/>;-->
            //
            // instance.add(1,5, function(t) {
            // document.getElementById('msg').innerHTML = t.responseObject();
            // });
            // var pvb;
            // pvb = t.responseObject();
            // var p =[];
            // for(var i in pvb)
            //     p.push([i,pvb[i]]);
            //
            //
            //
            // document.getElementById('msg').innerHTML = p;
            // });

        </script>

            <script type="text/javascript" src="${rootURL}/plugin/hp-application-automation-tools-plugin/js/jslib.js"/>

    </l:main-panel>
    </l:layout>
</j:jelly>